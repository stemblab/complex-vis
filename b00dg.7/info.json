{
  "id" : "b00dg.7",
  "moduleIdx" : 374,
  "baseId" : "b00dg.6",
  "name" : "Visualizing a complex function",
  "url" : "?id=b00dg.7",
  "valid" : true,
  "editor" : "lab_rev",
  "editorIp" : "58.28.155.63",
  "timestamp" : "2014-04-14 23:39:51",
  "isoTime" : "2014-04-14T23:39:51+12:00",
  "canAccessFolder" : true,
  "isSandbox" : false,
  "canCommit" : true,
  "share" : null,
  "isPublic" : true,
  "price" : null,
  "uses" : "b007c.5",
  "imports" : [
    {
      "id" : "b007c.5",
      "moduleIdx" : 221,
      "baseId" : "b007c.4",
      "name" : "Module Languages",
      "url" : "?id=b007c.5",
      "valid" : true,
      "editor" : "martin",
      "editorIp" : "58.28.155.63",
      "timestamp" : "2013-08-22 20:20:34",
      "isoTime" : "2013-08-22T20:20:34+12:00",
      "canAccessFolder" : true,
      "isSandbox" : false,
      "canCommit" : true,
      "share" : "gary",
      "isPublic" : true,
      "price" : null,
      "depth" : 1,
      "fromUses" : false,
      "importer" : "b00dg.7"
    },
    {
      "id" : "b000n.5",
      "moduleIdx" : 20,
      "baseId" : "b000n.4",
      "name" : "HTML\/JavaScript definition",
      "url" : "?id=b000n.5",
      "valid" : true,
      "editor" : "martin",
      "editorIp" : "58.28.155.63",
      "timestamp" : "2012-08-19 12:17:24",
      "isoTime" : "2012-08-19T12:17:24+12:00",
      "canAccessFolder" : true,
      "isSandbox" : false,
      "canCommit" : true,
      "share" : null,
      "isPublic" : true,
      "price" : null,
      "depth" : 2,
      "fromUses" : false,
      "importer" : "b007c.5"
    },
    {
      "id" : "b006m.2",
      "moduleIdx" : 199,
      "baseId" : "b006m.1",
      "name" : "CoffeeScript definition",
      "url" : "?id=b006m.2",
      "valid" : true,
      "editor" : "martin",
      "editorIp" : "58.28.155.63",
      "timestamp" : "2012-12-10 13:59:29",
      "isoTime" : "2012-12-10T13:59:29+13:00",
      "canAccessFolder" : true,
      "isSandbox" : false,
      "canCommit" : true,
      "share" : null,
      "isPublic" : true,
      "price" : null,
      "depth" : 2,
      "fromUses" : false,
      "importer" : "b007c.5"
    },
    {
      "id" : "b000d.15",
      "moduleIdx" : 12,
      "baseId" : "b000d.14",
      "name" : "Python definition",
      "url" : "?id=b000d.15",
      "valid" : true,
      "editor" : "martin",
      "editorIp" : "58.28.155.63",
      "timestamp" : "2013-05-20 15:20:43",
      "isoTime" : "2013-05-20T15:20:43+12:00",
      "canAccessFolder" : true,
      "isSandbox" : false,
      "canCommit" : true,
      "share" : "gary",
      "isPublic" : true,
      "price" : null,
      "depth" : 2,
      "fromUses" : false,
      "importer" : "b007c.5"
    },
    {
      "id" : "b000g.10",
      "moduleIdx" : 14,
      "baseId" : "b000g.9",
      "name" : "Octave definition",
      "url" : "?id=b000g.10",
      "valid" : true,
      "editor" : "martin",
      "editorIp" : "58.28.155.63",
      "timestamp" : "2013-08-22 20:03:42",
      "isoTime" : "2013-08-22T20:03:42+12:00",
      "canAccessFolder" : true,
      "isSandbox" : false,
      "canCommit" : true,
      "share" : "gary",
      "isPublic" : true,
      "price" : null,
      "depth" : 2,
      "fromUses" : false,
      "importer" : "b007c.5"
    }
  ],
  "defs" : {
    "html" : {
      "src" : "b000n.5",
      "fileExt" : "html",
      "endToken" : "<!--puzlet_end-->",
      "endTokenExec" : "<!--puzlet_end-->",
      "passThru" : "true"
    },
    "javascript" : {
      "src" : "b000n.5",
      "fileExt" : "js",
      "endToken" : "\/\/!end",
      "endTokenExec" : "\/\/!end",
      "includeInHtmlHead" : "true"
    },
    "css" : {
      "src" : "b000n.5",
      "fileExt" : "css",
      "endToken" : "\/*!end*\/",
      "endTokenExec" : "\/*!end*\/",
      "includeInHtmlHead" : "true"
    },
    "coffee" : {
      "src" : "b006m.2",
      "fileExt" : "coffee",
      "endToken" : "#!end",
      "endTokenExec" : "#!end",
      "includeInHtmlHead" : "true"
    },
    "python" : {
      "src" : "b000d.15",
      "fileExt" : "py",
      "preamble" : "#!puzlet",
      "preambleExec" : "import puzlet",
      "postambleExec" : "puzlet.endScript()",
      "endToken" : "#!end",
      "endTokenExec" : "puzlet.end",
      "preProcessFileCommand" : "\nexport PYTHONPATH=..\/..\/..\/puzlet\/b000d.15; python ..\/..\/..\/puzlet\/b000d.15\/preprocessscript.py\n",
      "execFileCommand" : "\nexport PYTHONPATH=..\/..\/..\/puzlet\/b000d.15; python -W ignore::DeprecationWarning\n"
    },
    "octave" : {
      "src" : "b000g.10",
      "fileExt" : "m",
      "endToken" : "%!end",
      "endTokenExec" : "_end",
      "preProcessFileCommand" : "\nexport PYTHONPATH=..\/..\/..\/puzlet\/b000g.10; python ..\/..\/..\/puzlet\/b000g.10\/preprocessoctave.py\n",
      "execFileCommand" : "\noctave -H --no-line-editing -q\n"
    }
  },
  "exports" : null,
  "htmlResources" : "<script src='\/puzlet\/php\/source.php?pageId=b00dg.7&file=resources.js' type='text\/javascript'><\/script>\n<script src='\/puzlet\/php\/source.php?pageId=b00dg.7&file=extras.js' type='text\/javascript'><\/script>\n<link type='text\/css' rel='stylesheet' href='\/puzlet\/php\/source.php?pageId=b00dg.7&file=main.css'>\n<script src='\/puzlet\/php\/source.php?pageId=b00dg.7&file=main.js' type='text\/javascript'><\/script>\n<script src='\/puzlet\/php\/source.php?pageId=b00dg.7&file=result.js' type='text\/javascript'><\/script>\n<script src='\/puzlet\/php\/source.php?pageId=b00dg.7&file=main.js' type='text\/javascript'><\/script>\n",
  "usedModulePath" : [
    "..\/..\/..\/puzlet\/b007c.5",
    "..\/..\/..\/puzlet\/b000n.5",
    "..\/..\/..\/puzlet\/b006m.2",
    "..\/..\/..\/puzlet\/b000d.15",
    "..\/..\/..\/puzlet\/b000g.10"
  ],
  "codeNodes" : [
    {
      "id" : "resources",
      "lang" : "coffee",
      "filename" : "resources.coffee",
      "fileNoExt" : "resources",
      "isExec" : false,
      "isScript" : false,
      "endToken" : "#!end",
      "idxInFile" : 0,
      "idxInPage" : 0,
      "codeBlockLength" : 6,
      "codeBlockStart" : 0,
      "show" : "0",
      "out" : "1",
      "code" : "$pz.resources = -> [\n# Handled directly in http.js.\n]"
    },
    {
      "id" : "window",
      "lang" : "html",
      "filename" : "window.html",
      "fileNoExt" : "window",
      "isExec" : false,
      "isScript" : false,
      "endToken" : "<!--puzlet_end-->",
      "idxInFile" : 0,
      "idxInPage" : 1,
      "codeBlockLength" : 6,
      "codeBlockStart" : 0,
      "show" : "1",
      "out" : "1",
      "code" : "<div id=\"title\">\nWeb Lab\n<\/div>"
    },
    {
      "id" : "extras",
      "lang" : "coffee",
      "filename" : "extras.coffee",
      "fileNoExt" : "extras",
      "isExec" : false,
      "isScript" : false,
      "endToken" : "#!end",
      "idxInFile" : 0,
      "idxInPage" : 2,
      "codeBlockLength" : 4,
      "codeBlockStart" : 0,
      "show" : "1",
      "out" : "1",
      "win" : "1",
      "code" : "\"b00d2\""
    },
    {
      "id" : "css",
      "lang" : "css",
      "filename" : "main.css",
      "fileNoExt" : "main",
      "isExec" : false,
      "isScript" : false,
      "endToken" : "\/*!end*\/",
      "idxInFile" : 0,
      "idxInPage" : 3,
      "codeBlockLength" : 8,
      "codeBlockStart" : 0,
      "show" : "1",
      "out" : "1",
      "win" : "1",
      "code" : ".slider {\n    position: relative;\n    display: inline-block;\n    width: 300px;    \n}"
    },
    {
      "id" : "html",
      "lang" : "html",
      "filename" : "main.html",
      "fileNoExt" : "main",
      "isExec" : false,
      "isScript" : false,
      "endToken" : "<!--puzlet_end-->",
      "idxInFile" : 0,
      "idxInPage" : 4,
      "codeBlockLength" : 12,
      "codeBlockStart" : 0,
      "show" : "1",
      "out" : "1",
      "win" : "1",
      "code" : "==Visualizing a complex function==\nImport this blab to plot a complex function in canvas element (id: \"canvas\").\n\n<div id=\"mathjax\"><\/div>\n\n<canvas id=\"canvas\" width=\"300\", height=\"300\"><\/canvas>\n\n<div class=\"slider\" id=\"slider\"><\/div>\n<span id=\"slider_text\"><\/span>"
    },
    {
      "id" : "coffee",
      "lang" : "coffee",
      "filename" : "main.coffee",
      "fileNoExt" : "main",
      "isExec" : false,
      "isScript" : false,
      "endToken" : "#!end",
      "idxInFile" : 0,
      "idxInPage" : 5,
      "codeBlockLength" : 68,
      "codeBlockStart" : 0,
      "show" : "1",
      "out" : "1",
      "win" : "1",
      "code" : "#!vanilla\n\n# Canvas id (html element)\ncanvasId = \"canvas\" \n\n# Color mapping\nlog10 = (x) -> Math.log(x)\/Math.LN10\n$blab.colorMap =\n    # Hue is a function of angle.\n    # Saturation\/lightness\/opacity are functions of radius:\n    saturation: (r) -> 1\n    lightness: (r) -> 0.5 * (1 - 1 \/ (1 + 25*log10(2*r + 1)))\n    opacity: (r) -> 1 \/ (1 + 1*log10(1+2*r))\n    \nsliderText = (val) ->\n    $(\"#slider_text\").html \"a=#{val}\" \n        \n# Render complex function.\n$blab.complexFunction = (spec) ->\n    \n    f = spec.f\n    xMax = spec.xMax\n    \n    $(document).trigger \"reprocessHtml\"\n        \n    $(\"#slider\").slider(\n        min: spec.a.min\n        max: spec.a.max\n        step: spec.a.step\n        value: spec.a.init\n        slide: (e, ui) -> sliderText ui.value           \n        change: (e, ui) ->\n            a = ui.value\n            sliderText a\n            drawFunction a   \n    ) if spec.a?\n        \n    drawFunction = (a) ->\n        if a?\n            f = (z) -> spec.f z, a\n        new $blab.ComplexFunctionImage {f, xMax, canvasId}, $blab.colorMap\n        \n    if spec.a?\n        a = spec.a.init\n        sliderText a\n        drawFunction a\n    else\n        drawFunction()\n    $(\"#mathjax\").html(\"$f(z) = #{spec.mathJax}$\")\n    $(document).trigger \"htmlOutputUpdated\"\n        \n# Example usage (see also HTML\/CSS):\n# Need to remove vanilla directive to use these examples.\n\n# mathJax = \"z^a\"  # MathJax for function\n# f = (z, a=1) -> z.pow a  # Code for function\n# a = {min: 1, max: 10, step: 1, init: 2} \n# xMax = 2.5  # Maximum domain value for real\/imaginary parts.\n# $blab.complexFunction {f, a, xMax, mathJax}\n\n# Or, without parameter\n# mathJax = \"z^3\"  # MathJax for function\n# f = (z) -> z.pow 3  # Code for function\n# xMax = 2.5  # Maximum domain value for real\/imaginary parts.\n# $blab.complexFunction {f, xMax, mathJax}"
    },
    {
      "id" : "result",
      "lang" : "coffee",
      "filename" : "result.coffee",
      "fileNoExt" : "result",
      "isExec" : false,
      "isScript" : false,
      "endToken" : "#!end",
      "idxInFile" : 0,
      "idxInPage" : 6,
      "codeBlockLength" : 4,
      "codeBlockStart" : 0,
      "show" : "1",
      "out" : "1",
      "code" : ""
    },
    {
      "id" : "js",
      "lang" : "javascript",
      "filename" : "main.js",
      "fileNoExt" : "main",
      "isExec" : false,
      "isScript" : false,
      "endToken" : "\/\/!end",
      "idxInFile" : 0,
      "idxInPage" : 7,
      "codeBlockLength" : 4,
      "codeBlockStart" : 0,
      "show" : "1",
      "out" : "1",
      "code" : ""
    }
  ]
}