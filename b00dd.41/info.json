{
  "id" : "b00dd.41",
  "moduleIdx" : 372,
  "baseId" : "b00dd.40",
  "name" : "Interactive Visualization of Complex Functions",
  "url" : "?id=b00dd.41",
  "valid" : true,
  "editor" : "lab_rev",
  "editorIp" : "58.28.155.63",
  "timestamp" : "2014-04-15 00:17:59",
  "isoTime" : "2014-04-15T00:17:59+12:00",
  "canAccessFolder" : true,
  "isSandbox" : false,
  "canCommit" : true,
  "share" : null,
  "isPublic" : true,
  "price" : null,
  "uses" : "b007c.5",
  "imports" : [
    {
      "id" : "b007c.5",
      "moduleIdx" : 221,
      "baseId" : "b007c.4",
      "name" : "Module Languages",
      "url" : "?id=b007c.5",
      "valid" : true,
      "editor" : "martin",
      "editorIp" : "58.28.155.63",
      "timestamp" : "2013-08-22 20:20:34",
      "isoTime" : "2013-08-22T20:20:34+12:00",
      "canAccessFolder" : true,
      "isSandbox" : false,
      "canCommit" : true,
      "share" : "gary",
      "isPublic" : true,
      "price" : null,
      "depth" : 1,
      "fromUses" : false,
      "importer" : "b00dd.41"
    },
    {
      "id" : "b000n.5",
      "moduleIdx" : 20,
      "baseId" : "b000n.4",
      "name" : "HTML\/JavaScript definition",
      "url" : "?id=b000n.5",
      "valid" : true,
      "editor" : "martin",
      "editorIp" : "58.28.155.63",
      "timestamp" : "2012-08-19 12:17:24",
      "isoTime" : "2012-08-19T12:17:24+12:00",
      "canAccessFolder" : true,
      "isSandbox" : false,
      "canCommit" : true,
      "share" : null,
      "isPublic" : true,
      "price" : null,
      "depth" : 2,
      "fromUses" : false,
      "importer" : "b007c.5"
    },
    {
      "id" : "b006m.2",
      "moduleIdx" : 199,
      "baseId" : "b006m.1",
      "name" : "CoffeeScript definition",
      "url" : "?id=b006m.2",
      "valid" : true,
      "editor" : "martin",
      "editorIp" : "58.28.155.63",
      "timestamp" : "2012-12-10 13:59:29",
      "isoTime" : "2012-12-10T13:59:29+13:00",
      "canAccessFolder" : true,
      "isSandbox" : false,
      "canCommit" : true,
      "share" : null,
      "isPublic" : true,
      "price" : null,
      "depth" : 2,
      "fromUses" : false,
      "importer" : "b007c.5"
    },
    {
      "id" : "b000d.15",
      "moduleIdx" : 12,
      "baseId" : "b000d.14",
      "name" : "Python definition",
      "url" : "?id=b000d.15",
      "valid" : true,
      "editor" : "martin",
      "editorIp" : "58.28.155.63",
      "timestamp" : "2013-05-20 15:20:43",
      "isoTime" : "2013-05-20T15:20:43+12:00",
      "canAccessFolder" : true,
      "isSandbox" : false,
      "canCommit" : true,
      "share" : "gary",
      "isPublic" : true,
      "price" : null,
      "depth" : 2,
      "fromUses" : false,
      "importer" : "b007c.5"
    },
    {
      "id" : "b000g.10",
      "moduleIdx" : 14,
      "baseId" : "b000g.9",
      "name" : "Octave definition",
      "url" : "?id=b000g.10",
      "valid" : true,
      "editor" : "martin",
      "editorIp" : "58.28.155.63",
      "timestamp" : "2013-08-22 20:03:42",
      "isoTime" : "2013-08-22T20:03:42+12:00",
      "canAccessFolder" : true,
      "isSandbox" : false,
      "canCommit" : true,
      "share" : "gary",
      "isPublic" : true,
      "price" : null,
      "depth" : 2,
      "fromUses" : false,
      "importer" : "b007c.5"
    }
  ],
  "defs" : {
    "html" : {
      "src" : "b000n.5",
      "fileExt" : "html",
      "endToken" : "<!--puzlet_end-->",
      "endTokenExec" : "<!--puzlet_end-->",
      "passThru" : "true"
    },
    "javascript" : {
      "src" : "b000n.5",
      "fileExt" : "js",
      "endToken" : "\/\/!end",
      "endTokenExec" : "\/\/!end",
      "includeInHtmlHead" : "true"
    },
    "css" : {
      "src" : "b000n.5",
      "fileExt" : "css",
      "endToken" : "\/*!end*\/",
      "endTokenExec" : "\/*!end*\/",
      "includeInHtmlHead" : "true"
    },
    "coffee" : {
      "src" : "b006m.2",
      "fileExt" : "coffee",
      "endToken" : "#!end",
      "endTokenExec" : "#!end",
      "includeInHtmlHead" : "true"
    },
    "python" : {
      "src" : "b000d.15",
      "fileExt" : "py",
      "preamble" : "#!puzlet",
      "preambleExec" : "import puzlet",
      "postambleExec" : "puzlet.endScript()",
      "endToken" : "#!end",
      "endTokenExec" : "puzlet.end",
      "preProcessFileCommand" : "\nexport PYTHONPATH=..\/..\/..\/puzlet\/b000d.15; python ..\/..\/..\/puzlet\/b000d.15\/preprocessscript.py\n",
      "execFileCommand" : "\nexport PYTHONPATH=..\/..\/..\/puzlet\/b000d.15; python -W ignore::DeprecationWarning\n"
    },
    "octave" : {
      "src" : "b000g.10",
      "fileExt" : "m",
      "endToken" : "%!end",
      "endTokenExec" : "_end",
      "preProcessFileCommand" : "\nexport PYTHONPATH=..\/..\/..\/puzlet\/b000g.10; python ..\/..\/..\/puzlet\/b000g.10\/preprocessoctave.py\n",
      "execFileCommand" : "\noctave -H --no-line-editing -q\n"
    }
  },
  "exports" : null,
  "htmlResources" : "<script src='\/puzlet\/php\/source.php?pageId=b00dd.41&file=resources.js' type='text\/javascript'><\/script>\n<script src='\/puzlet\/php\/source.php?pageId=b00dd.41&file=extras.js' type='text\/javascript'><\/script>\n<link type='text\/css' rel='stylesheet' href='\/puzlet\/php\/source.php?pageId=b00dd.41&file=main.css'>\n<script src='\/puzlet\/php\/source.php?pageId=b00dd.41&file=main.js' type='text\/javascript'><\/script>\n<script src='\/puzlet\/php\/source.php?pageId=b00dd.41&file=result.js' type='text\/javascript'><\/script>\n<script src='\/puzlet\/php\/source.php?pageId=b00dd.41&file=main.js' type='text\/javascript'><\/script>\n",
  "usedModulePath" : [
    "..\/..\/..\/puzlet\/b007c.5",
    "..\/..\/..\/puzlet\/b000n.5",
    "..\/..\/..\/puzlet\/b006m.2",
    "..\/..\/..\/puzlet\/b000d.15",
    "..\/..\/..\/puzlet\/b000g.10"
  ],
  "codeNodes" : [
    {
      "id" : "resources",
      "lang" : "coffee",
      "filename" : "resources.coffee",
      "fileNoExt" : "resources",
      "isExec" : false,
      "isScript" : false,
      "endToken" : "#!end",
      "idxInFile" : 0,
      "idxInPage" : 0,
      "codeBlockLength" : 6,
      "codeBlockStart" : 0,
      "show" : "0",
      "out" : "1",
      "code" : "$pz.resources = -> [\n# Handled directly in http.js.\n]"
    },
    {
      "id" : "window",
      "lang" : "html",
      "filename" : "window.html",
      "fileNoExt" : "window",
      "isExec" : false,
      "isScript" : false,
      "endToken" : "<!--puzlet_end-->",
      "idxInFile" : 0,
      "idxInPage" : 1,
      "codeBlockLength" : 6,
      "codeBlockStart" : 0,
      "show" : "1",
      "out" : "1",
      "code" : "<div id=\"title\">\nWeb Lab\n<\/div>"
    },
    {
      "id" : "extras",
      "lang" : "coffee",
      "filename" : "extras.coffee",
      "fileNoExt" : "extras",
      "isExec" : false,
      "isScript" : false,
      "endToken" : "#!end",
      "idxInFile" : 0,
      "idxInPage" : 2,
      "codeBlockLength" : 8,
      "codeBlockStart" : 0,
      "show" : "1",
      "out" : "1",
      "win" : "1",
      "code" : "$blab.overloadOps = true\n$blab.show \"Coffee\", false\n$blab.show \"Eval\", false\n\"b00d2\"\n\"b00dg\""
    },
    {
      "id" : "css",
      "lang" : "css",
      "filename" : "main.css",
      "fileNoExt" : "main",
      "isExec" : false,
      "isScript" : false,
      "endToken" : "\/*!end*\/",
      "idxInFile" : 0,
      "idxInPage" : 3,
      "codeBlockLength" : 77,
      "codeBlockStart" : 0,
      "show" : "1",
      "out" : "1",
      "win" : "1",
      "code" : ".center_column {\n    width: 960px;\n    margin: 0 auto;\n}\n\n.left_col {\n    float: left;\n    width: 400px;\n}\n.right_col {\n    float: right;\n    width: 560px;\n    margin-top: 40px;\n}\n\n.clear {\n    clear: both;\n}\n\n#main_function {\n    margin-top: 10px;\n    margin-left: 30px;\n}\n\n.info_text {\n    color: #aaa;\n}\n\n#gallery {\n    margin-top: 30px;\n}\n\n#examples {\n    margin-top: 0px;\n}\n\n.example {\n    display: inline-block;\n    width: 220px;\n    margin-bottom: 30px;\n    vertical-align: bottom;\n}\n\n.mathjax_container {\n    margin-bottom: -15px;\n    width: 200px;  \/* ZZZ larger for main? *\/\n    height: 45px;\n    font-size: 10pt;\n    overflow: visible;\n}\n\n.canvas {\n    vertical-align: middle;\n}\n\n.slider_thumb {\n    position: relative;\n    display: inline-block;\n    width: 122px;    \n}\n\n.slider_text {\n    margin-left: 10px;\n}\n\n\/*.ui-slider .ui-slider-handle {\n    height: 12px;\n    width: 12px;\n    padding-left: 1px;\n}*\/\n\n\/*.ui-slider-horizontal {\n    height: .6em;\n}*\/"
    },
    {
      "id" : "html",
      "lang" : "html",
      "filename" : "main.html",
      "fileNoExt" : "main",
      "isExec" : false,
      "isScript" : false,
      "endToken" : "<!--puzlet_end-->",
      "idxInFile" : 0,
      "idxInPage" : 4,
      "codeBlockLength" : 42,
      "codeBlockStart" : 0,
      "show" : "1",
      "out" : "1",
      "win" : "1",
      "code" : "<div class=\"center_column\">\n==Interactive Visualization of Complex Functions==\n\n<div class=\"left_col\">\n<div id=\"main_function\">\n<div id=\"mathjax\" class=\"mathjax_container\"><\/div>\n<a id=\"canvas_link\" target=\"_blank\" title=\"View or edit code that generated this complex function.\">\n<canvas id=\"canvas\" width=\"300\", height=\"300\"><\/canvas>\n<\/a>\n<div class=\"slider\" id=\"slider\"><\/div>\n<span id=\"slider_text\" class=\"slider_text\"><\/span>    \n<\/div>\n<\/div>\n\n<div class=\"right_col\">\n* Horizontal and vertical axes: $\\Re[z]$ and $\\Im[z]$.\n* Color $\\equiv \\arg f(z)$ (<span \nstyle=\"color:red\">r<\/span>-<span \nstyle=\"color:orange\">o<\/span>-<span \nstyle=\"color:#dd0\">y<\/span>-<span \nstyle=\"color:green\">g<\/span>-<span \nstyle=\"color:blue\">b<\/span>-<span \nstyle=\"color:violet\">v<\/span> $\\equiv 0\\rightarrow2\\pi$).\n* Lightness $\\equiv |f(z)|$ (black$\\rightarrow$white $\\equiv$ $0\\rightarrow\\infty$).\n* *Click image* to view\/edit code that generated it.<br>\n<br>\n__These are not animated GIFs.  The computation and visualization are performed on-the-fly.__\n<\/div>\n\n<div class=\"clear\"><\/div>\n\n<div id=\"gallery\">\n==Gallery==\n<span class=\"info_text\">Click to see larger image<\/span>\n<div id=\"examples\"><\/div>\n[\/m\/b00dh, Add a function to this gallery]\n<\/div>\n    \n<\/div>"
    },
    {
      "id" : "coffee",
      "lang" : "coffee",
      "filename" : "main.coffee",
      "fileNoExt" : "main",
      "isExec" : false,
      "isScript" : false,
      "endToken" : "#!end",
      "idxInFile" : 0,
      "idxInPage" : 5,
      "codeBlockLength" : 203,
      "codeBlockStart" : 0,
      "show" : "1",
      "out" : "1",
      "win" : "1",
      "code" : "#!vanilla\nclass MainComplexFunction\n\n    selectGalleryExample: \"selectGalleryExample\"\n\n    constructor: ->\n        @doc = $ document\n        @doc.trigger \"reprocessHtml\"\n        @canvasId = \"canvas\"\n        @doc.unbind @selectGalleryExample\n        @first = true\n        @doc.on @selectGalleryExample, (e, data) =>\n            @func?.text \"Loading...\"\n            # Delay so loading message displayed.\n            setTimeout (=> @setExample data.functionSpec, data.id), 10\n    \n    setExample: (functionSpec, id) ->\n        @draw functionSpec, id\n        if @first\n            @animate functionSpec\n            @first = false\n        else\n            @changed = true        \n    \n    draw: (functionSpec, id) ->\n        $(\"#canvas_link\").attr href: \"\/m\/#{id}\"\n        spec = $.extend {}, functionSpec  # Clone\n        spec.canvasId = @canvasId\n        spec.mathJaxContainer = $ \"#mathjax\"\n        spec.sliderContainer = $ \"#slider\"\n        spec.sliderText = $ \"#slider_text\"\n        @func = new ComplexFunction spec\n        @doc.trigger \"htmlOutputUpdated\"  # To re-render MathJax\n    \n    animate: (spec) ->\n        a = spec.a\n        setSlider = (v) =>\n            return if @func.sliderTouched? or @changed?\n            @func.setSliderVal v\n            setTimeout (-> setSlider(v+a.step)), 1000 if v<a.max\n        setSlider a.min\n\nclass Gallery\n\n    # Blab id of examples to show in gallery\n    examplesId: \"b00dh\"\n\n    # Exclude these revisions from gallery\n    excludeRevisions: [1]\n    \n    constructor: ->\n        @div = $ \"#examples\"\n        @examples = []\n        @getRevisions()\n                \n    getRevisions: ->\n        spec = \n            id: @examplesId\n            action: \"getLabRevisions\"\n        $blab.server.request spec, (resp) =>\n            return unless resp.ok\n            @div.empty()\n            @examplesToLoad = 0\n            @getRevision r.rev for r in resp.revisions\n                \n    getRevision: (rev) ->\n        return if parseInt(rev) in @excludeRevisions\n        id = \"#{@examplesId}.#{rev}\"\n        @examplesToLoad++\n        @examples.push(new GalleryExample @div, id, => @exampleLoaded())\n                \n    exampleLoaded: ->\n        @examplesToLoad--\n        @examples[0].select() if @examplesToLoad is 0  # All examples loaded\n\nclass GalleryExample\n\n    constructor: (@container, @id, @loadedCallback) ->\n        @html()\n        @load()\n        $(document).on \"clickGalleryExample\", (e, data) => @border(data.id is @id) \n          \n    html: ->\n        \n        @div = $ \"<div>\", class: \"example\"\n        @container.append @div\n        \n        @mathJaxContainer = $ \"<div>\", class: \"mathjax_container\"\n\n        @canvasId = \"canvas_\"+@id\n        @link = $ \"<a>\", click: => @select()\n        @sliderContainer = $ \"<div>\", class: \"slider_thumb\"\n        @sliderText = $ \"<span>\", class: \"slider_text\"\n        \n        @div\n            .append(@mathJaxContainer)\n            .append(@link)\n            .append(@sliderContainer)\n            .append(@sliderText)\n        \n        @canvas = $ \"<canvas>\",\n            id: @canvasId\n            class: \"canvas\"\n            width: 120\n            height: 120\n            title: \"Click to see larger image (at top)\"\n            \n        @link.append @canvas\n        @border false\n        \n    load: ->\n        t = new Date().getTime()\n        url = \"\/puzlet\/php\/source.php?pageId=#{@id}&file=main.coffee&t=#{t}\"\n            \n        $.ajax(\n            url: url\n            type: \"get\"\n        ).done (data) =>\n            @runCoffee data\n            @loadedCallback()\n            \n    runCoffee: (coffee) ->\n        \n        @js = CoffeeEvaluator.compile coffee\n                \n        # Global function used in imported\/compiled CoffeeScript code.\n        $blab.complexFunction = (@functionSpec) =>\n            spec = $.extend({}, @functionSpec)  # Clone\n            spec.canvasId = @canvasId\n            spec.mathJaxContainer = @mathJaxContainer\n            spec.link = @link\n            spec.sliderContainer = @sliderContainer\n            spec.sliderText = @sliderText\n            new ComplexFunction spec\n            \n        eval @js\n        \n    select: ->\n        @border()\n        data =\n            id: @id\n            functionSpec: @functionSpec\n        $.event.trigger \"clickGalleryExample\", data\n        # Delay computation so borders can be set\/unset.\n        setTimeout (-> $.event.trigger \"selectGalleryExample\", data), 10\n                \n    border: (border=true) ->\n        @canvas.css border: (if border then \"2px solid blue\" else \"2px solid white\") \n        \nclass ComplexFunction\n\n    constructor: (@spec) ->\n        \n        # MathJax label\n        mathJax = @spec.mathJax ? \"?=\"       \n        @spec.mathJaxContainer.html(\"$f(z) = #{mathJax}$\")\n\n        # Slider if parameter property specified\n        if @spec.a?\n            a = @spec.a\n            @spec.sliderContainer.slider\n                min: a.min\n                max: a.max\n                step: a.step\n                value: a.init\n                slide: (e, ui) =>\n                    @sliderTouched = true\n                    @setSliderText ui.value           \n                change: (e, ui) => @draw ui.value\n        \n        # Draw complex function.\n        @draw @spec.a?.init\n            \n    draw: (a) ->\n        if a?\n            @setSliderText a\n            f = (z) => @spec.f z, a\n        else\n            f = @spec.f\n        xMax = @spec.xMax\n        canvasId = @spec.canvasId\n        new $blab.ComplexFunctionImage {f, xMax, canvasId}, $blab.colorMap\n        \n    text: (txt) ->\n        canvas = document.getElementById @spec.canvasId\n        context = canvas.getContext \"2d\"\n        context.fillStyle = \"white\"\n        context.font = \"bold 16px Arial\"\n        context.textAlign = \"center\"\n        w = canvas.width\n        h = canvas.height\n        context.fillText txt, w\/2, h\/2\n        \n    setSliderVal: (a) ->\n        @spec.sliderContainer.slider \"value\", a\n        \n    setSliderText: (val) => @spec.sliderText.html \"a=#{val}\"\n\nnew MainComplexFunction\nnew Gallery"
    },
    {
      "id" : "result",
      "lang" : "coffee",
      "filename" : "result.coffee",
      "fileNoExt" : "result",
      "isExec" : false,
      "isScript" : false,
      "endToken" : "#!end",
      "idxInFile" : 0,
      "idxInPage" : 6,
      "codeBlockLength" : 4,
      "codeBlockStart" : 0,
      "show" : "1",
      "out" : "1",
      "code" : ""
    },
    {
      "id" : "js",
      "lang" : "javascript",
      "filename" : "main.js",
      "fileNoExt" : "main",
      "isExec" : false,
      "isScript" : false,
      "endToken" : "\/\/!end",
      "idxInFile" : 0,
      "idxInPage" : 7,
      "codeBlockLength" : 4,
      "codeBlockStart" : 0,
      "show" : "1",
      "out" : "1",
      "code" : ""
    }
  ]
}